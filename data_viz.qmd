---
title: "data_viz"
format: html
editor: visual
---

## 

```{r}
library(readr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(janitor) # expedite cleaning and exploring data
library(scales) # scale functions for visualization
library(leaflet) # interactive maps
library(DT) # interactive tables
```

```{r}
escape_raw <- read_csv("https://knb.ecoinformatics.org/knb/d1/mn/v2/object/urn%3Auuid%3Af119a05b-bbe7-4aea-93c6-85434dcb1c5e")
```

exploring data

```{r}
 ## Check out column names
colnames(escape_raw)

## Peak at each column and class
glimpse(escape_raw)

## From when to when
range(escape_raw$sampleDate)

## Which species?
unique(escape_raw$Species)
```

##Cleaning data

column names

```{r}
escape <- escape_raw %>% 
    janitor::clean_names()
colnames(escape)
```

Calculate annual escapement

```{r}
annual_esc <- escape %>% 
  separate(sample_date, c("year", "month", "day"), sep = "-") %>% 
  mutate(year = as.numeric(year)) %>% 
  group_by(species, sasap_region, year) %>% 
  summarize(escapement = sum(daily_count)) %>% 
  filter(species %in% c("Chinook", "Sockeye", "Chum", "Coho", "Pink"))

unique(annual_esc$species)
head (annual_esc)
```

Variants of graphs

```{r}
## Option 1 - data and mapping called in the ggplot() function
ggplot(data = annual_esc,
       aes(x = species, y = escapement)) +
    geom_col()

## Option 2 - data called in ggplot function; mapping called in geom
ggplot(data = annual_esc) +
    geom_col(aes(x = species, y = escapement))


## Option 3 - data and mapping called in geom
ggplot() +
    geom_col(data = annual_esc,
             aes(x = species, y = escapement, fill = sasap_region))

ggplot(annual_esc,
       aes(x = species, y = escapement)) +
    geom_col(fill = "blue")
```

create multiple plots

subsetting data

```{r}
annual_esc_2000 <- annual_esc %>% 
  filter(year %in% c(2000:2016))

unique(annual_esc_2000$year)


```

```{r}
## Plot with facets
ggplot(annual_esc_2000,
       aes(x = year,
           y = escapement,
           color = species)) +
    geom_line() +
    geom_point() +
    facet_wrap( ~ sasap_region,
                scales = "free_y")
```

```{r}
my_theme <- theme_light() +
    theme(legend.position = "bottom",
          legend.title = element_blank())
```

```{r}
ggplot(annual_esc_2000,
       aes(x = year,
           y = escapement,
           color = species)) +
    geom_line() +
    geom_point() +
    facet_wrap( ~ sasap_region,
                scales = "free_y") +
    labs(title = "Annual Salmon Escapement by Region",
         y = "Escapement") +
    my_theme
```

```{r}
## Useful baseline themes are
ggplot(annual_esc_2000,
       aes(x = year,
           y = escapement,
           color = species)) +
    geom_line() +
    geom_point() +
    scale_x_continuous(breaks = seq(2000, 2016, 2)) +
    facet_wrap( ~ sasap_region,
                scales = "free_y") +
    labs(title = "Annual Salmon Escapement by Region",
         y = "Escapement") +
    my_theme +
    theme(axis.text.x = element_text(angle = 45,
                                     vjust = 0.5))
```

```{r}
ggplot(annual_esc_2000,
       aes(x = year,
           y = escapement,
           color = species)) +
    geom_line() +
    geom_point() +
    scale_x_continuous(breaks = seq(2000, 2016, 2)) +
    scale_y_continuous(labels = comma) +
    facet_wrap( ~ sasap_region,
                scales = "free_y") +
    labs(title = "Annual Salmon Escapement by Region",
         y = "Escapement") +
    my_theme +
    theme(axis.text.x = element_text(angle = 45,
                                     vjust = 0.5))
```

saving plots

```{r}
ggsave("plots/annual_salmon_esc_reg.jpg", width = 8, height = 6, units = "in")
```

```{r}
annual_esc %>%
    filter(year == 1974,
          species %in% c("Chum", "Pink")) %>%
    ggplot(aes(x = species, y = escapement)) +
    geom_boxplot()
```

```{r}
location <- escape %>% 
  distinct(location, latitude, longitude) %>%
  drop_na()
View(location)

datatable(location)
```

Leaflet

```{r}
leaflet(location) %>%
    addTiles() %>%
    addMarkers(
        lng = ~ longitude,
        lat = ~ latitude,
        popup = ~ location
    )
```

map show

```{r}
leaflet(location) %>%
    addWMSTiles(
        "https://www.gebco.net/data_and_products/gebco_web_services/web_map_service/mapserv?request=getmap&service=wms&BBOX=-90,-180,90,360&crs=EPSG:4326&format=image/jpeg&layers=gebco_latest&width=1200&height=600&version=1.3.0",
        layers = 'GEBCO_LATEST',
        attribution = "Imagery reproduced from the GEBCO_2022 Grid, WMS 1.3.0 GetMap, www.gebco.net"
    ) %>%
    addCircleMarkers(
        lng = ~ longitude,
        lat = ~ latitude,
        popup = ~ location,
        radius = 5,
        # set fill properties
        fillColor = "salmon",
        fillOpacity = 1,
        # set stroke properties
        stroke = T,
        weight = 0.5,
        color = "white",
        opacity = 1
    )
```
